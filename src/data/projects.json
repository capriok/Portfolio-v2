[
	{
		"title": "Sweetie",
		"slug": "sweetie",
		"description": "A personal home dashboard hosted on a Raspberry Pi featuring a calender, weather stats, lists, and pet and plant schedules.",
		"writing": {
			"process": "Soon ™",
			"processSub": "",
			"conclusion": [
				"Learned about Raspberry Pis and micro services",
				"Built upon experience working with linux OS",
				"Evolved my coding style and preferred project structure"
			]
		},
		"stack": [
			"TypeScript",
			"React",
			"Express.js",
			"MongoDB"
		],
		"tags": [
			"TypeScript",
			"React",
			"2021"
		],
		"source": "https://github.com/capriok/sweetie",
		"demo": "https://github.com/capriok/sweetie",
		"thumb": "./images/SWEETIE-SHOWCASE.jpg",
		"images": [
			"./images/SWEETIE-SHOWCASE.jpg",
			"./images/SWEETIE-PRODUCT.jpg",
			"./images/SWEETIE-MOBILE1.jpg",
			"./images/SWEETIE-MOBILE2.jpg"
		],
		"resources": [
			"https://www.typescriptlang.org/docs/home.html",
			"https://devcenter.heroku.com"
		]
	},
	{
		"title": "AutoSearch",
		"slug": "autosearch",
		"description": "NPM Pacakge - React autocomplete and search component featuring keyboard navigation and easy customization.",
		"writing": {
			"process": "Soon ™",
			"processSub": "",
			"conclusion": [
				"Built upon my knowledge of DevOps processes",
				"Learned to effectively use Rollup.js and Jest",
				"Exercised the use of modern React architecture best practices"
			]
		},
		"stack": [
			"TypeScript",
			"NPM",
			"Rollup",
			"Jest"
		],
		"tags": [
			"NPM Package",
			"TypeScript",
			"Rollup",
			"2021"
		],
		"source": "https://github.com/capriok/autoSearch",
		"demo": "https://codesandbox.io/s/autosearch-ltzg7",
		"thumb": "./images/AUTOSEARCH-SANDBOX.jpg",
		"images": [
			"./images/AUTOSEARCH-SHOWCASE.jpg",
			"./images/AUTOSEARCH-SANDBOX.jpg",
			"./images/AUTOSEARCH-VISUAL.gif"
		],
		"resources": [
			"https://docs.npmjs.com/cli/v6/commands/npm-publish",
			"https://www.rollupjs.org/guide/en",
			"https://jestjs.io/docs/api"
		]
	},
	{
		"title": "WorkPoints",
		"slug": "workpoints",
		"description": "VSCode Extension - Create and cycle through points in which you are working within files by the use of keyboard shortcuts.",
		"writing": {
			"process": "This project is a Visual Studio Code extension available for use by anyone. Like many ideas, I came up with this extension to help solve a common real-world problem. When working in large files, thousands of lines, it is easy to and lose track of the points in which youre working when scrolling between lines far from one another. This extension makes available functionality to create workpoints in files and the ability to cycle through these workpoints. The extension uses three keyboard shortcuts that handle all functionality: Ctrl + , | Ctrl + . | Ctrl + Shift + / . The first two shortcuts cycle through workpoints in a file, placing the cursor on the line and revealing it in the center of your view. In adition, the last shortcut is used to add/ remove workpoints from current cursor position in a file.",
			"processSub": "",
			"conclusion": [
				"Improved skills working with Webpack and Mocha",
				"Developed experience with the VSCode Extension API",
				"Learned more about how VSCode operates under the hood"
			]
		},
		"stack": [
			"VSCode",
			"TypeScript",
			"Webpack",
			"Mocha"
		],
		"tags": [
			"VSCode Extension",
			"TypeScript",
			"2021"
		],
		"source": "https://github.com/capriok/WorkPoints",
		"demo": "https://marketplace.visualstudio.com/items?itemName=capriok.workpoints",
		"thumb": "./images/WORKPOINTS-MARKETPLACE.jpg",
		"images": [
			"./images/WORKPOINTS-SHOWCASE.jpg",
			"./images/WORKPOINTS-MARKETPLACE.jpg",
			"./images/WORKPOINTS-VISUAL.gif"
		],
		"resources": [
			"https://code.visualstudio.com/api",
			"https://marketplace.visualstudio.com"
		]
	},
	{
		"title": "EnvLocker",
		"slug": "env-locker",
		"description": "C# Windows Forms application that securely stores project environment variables behind a 4-digit user authentication passcode.",
		"writing": {
			"process": "Soon ™",
			"processSub": "",
			"conclusion": [
				"Familiarized myself with WinForms application and APIs",
				"Improved skills of writing fluent and robust C# code",
				"Learned a lot about windows operating system and file storage"
			]
		},
		"stack": [
			"C Sharp",
			"ASP.NET Core",
			"Windows Forms"
		],
		"tags": [
			"Windows Forms",
			"C#",
			"2021"
		],
		"source": "https://github.com/capriok/Env-Locker",
		"demo": "https://kylecaprio.dev/env-locker",
		"thumb": "./images/NOT-FOUND.jpg",
		"images": [
			"./images/NOT-FOUND.jpg"
		],
		"resources": [
			"https://docs.microsoft.com/en-us/dotnet/desktop/winforms/?view=netdesktop-5.0"
		]
	},
	{
		"title": "Board Master",
		"slug": "board-master",
		"description": "Head to head competitive typing test featuring words per minute and accuracy scoring, built on Express.js and Socket.io",
		"writing": {
			"process": "Inspired by typings.gg, this optimized typing-skill application is loaded with features. I went into this application with the idea of creating a head-to-head typing application to challenge yourself and others. Once I started the coding phase, many ideas started popping out at me to build such as a lobby system and chat capabilities. Other features I am proud of are the lobby options, scoring system, and practice lobbies while you wait around in the challenge lobby. When a player joins a lobby in a room, the player can choose the amount of words and with the max word length that the challenge will render. The scoring system calculates your accuracy and words per minute; corrected and uncorrected errors are accounted for in the scoring calculation algorithm.",
			"processSub": "I chose to write both the client and server in TypeScript which taught me an incredible amount about TypeScript. This presented me with a good opportunity to work with TypeScript namespaces and classes as well as Node.js design concepts which I dont normally work with in the React Ecosystem.",
			"conclusion": [
				"Expanded my knowledge of OOP trechniques and architecture",
				"Developed extensive experience with Socket.io API ",
				"Became more knowledgable with real-time client to server communication"
			]
		},
		"stack": [
			"TypeScript",
			"React",
			"Express.js",
			"Socket.io",
			"SASS"
		],
		"tags": [
			"React",
			"Express.js",
			"Socket.io",
			"2021"
		],
		"source": "https://github.com/capriok/Board-Master",
		"demo": "https://board-master.kylecaprio.dev",
		"thumb": "./images/BMASTER-HOME.jpg",
		"images": [
			"./images/BMASTER-SHOWCASE.jpg",
			"./images/BMASTER-HOME.jpg",
			"./images/BMASTER-CHAT.jpg",
			"./images/BMASTER-LOBBY.jpg",
			"./images/BMASTER-MATCH.jpg",
			"./images/BMASTER-RESULT.jpg"
		],
		"resources": [
			"https://socket.io",
			"https://devcenter.heroku.com"
		]
	},
	{
		"title": "Draggable-Array",
		"slug": "draggable-array",
		"description": "NPM Package - Wrapper Component that utilizes the native browser drag API, giving endless functionality to its children",
		"writing": {
			"process": "I had an idea when working on SQLifting, a personal workout application, to make a reusable component with drag and drop functionality to organize elements in an array. I ran into a plethora of issues trying to do this with NPM Packages, so my idea reformed into making a NPM package of my own that anyone could use. After writing the base functionality using the Browser Drag API + Reacts top-level API, it became clear this was going to be a easy to make, powerful utility component. This project came easy to me because I love making things for people to use while learning more about several different concepts and aspects that will make me a better programmer.",
			"processSub": "",
			"conclusion": [
				"Learned Reacts Top-Level API and how to render components with it",
				"Developed better understanding of what JSX does under the hood",
				"Progressed TypeScript skills and building professional code bases"
			]
		},
		"stack": [
			"TypeScript",
			"React Top Level API",
			"Browser Drag API",
			"NPM",
			"SASS"
		],
		"tags": [
			"TypeScript",
			"React",
			"NPM",
			"2020"
		],
		"source": "https://github.com/capriok/react-draggable-array",
		"demo": "https://codesandbox.io/s/react-draggable-array-2kdql",
		"thumb": "./images/DRAGGABLE-NPM.jpg",
		"images": [
			"./images/DRAGGABLE-GIT.jpg",
			"./images/DRAGGABLE-NPM.jpg",
			"./images/DRAGGABLE-VISUAL.gif"
		],
		"resources": [
			"https://reactjs.org/docs/react-api.html",
			"https://www.typescriptlang.org/docs/home.html",
			"https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API",
			"https://www.npmjs.com"
		]
	},
	{
		"title": "Cash Flow",
		"slug": "cashflow",
		"description": "Mobile budgeting application featuring individual user accounts with multiple budget sheets, interface customization and more",
		"writing": {
			"process": "Building many web applications with JavaScript has brought me to love the language. I have also come to understand the quirks and shortcomings of the language. With this application, I wanted to build something I could use in my daily life. Using TypeScript, I had the perfect opportunity to dive into something that would also challenge my skills along the way. Learning about why it has become so popular so quickly inspired me to learn everything about it.",
			"processSub": "As programmers, we strive to write better structured and organized code with less bugs. React and TypeScript are a match made in heaven for that purpose, in my opinion. In very little time, I realized how TypeScript expedites the building process and maintains a better structured code base. I also learned a lot about how React works under the hood when learning about type assertions and generics. This is something I feel is very important to know while developing in the React framework Building. This app has fueled my passion to keep learning and progressing my programmatic skills.",
			"conclusion": [
				"Learned TypeScript fundementals ( Interfaces, Type Assertion, Generics, Unions and Intersections )",
				"Expanded knowledge about how React works under the hood",
				"Progressed experience with debugging and error handling",
				"Improved skills working with and manipulating deeply nested object properties",
				"Became far more confident in writing code without reference"
			]
		},
		"stack": [
			"TypeScript",
			"React",
			"SASS"
		],
		"tags": [
			"TypeScript",
			"React",
			"SASS",
			"2020"
		],
		"source": "https://github.com/capriok/CashFlow",
		"demo": "https://cashflow.kylecaprio.dev",
		"thumb": "./images/CASHFLOW-GREETING.jpg",
		"images": [
			"./images/CASHFLOW-GREETING.jpg",
			"./images/CASHFLOW-DATASHEET.jpg",
			"./images/CASHFLOW-NEWBUDGET.jpg",
			"./images/CASHFLOW-DELETE.jpg"
		],
		"resources": [
			"https://www.typescriptlang.org/docs/home.html"
		]
	},
	{
		"title": "KP Construction",
		"slug": "kp-construction",
		"description": "Small business client’s contractor portfolio showcasing services offered, area of expertise and highlighting past endeavors",
		"writing": {
			"process": "Referred by a friend and previous client, a small contracting business owner reached out to me to build his website. He previously used HomeAdvisor for marketing but wanted more customizability of the content displayed to promote his business. He specified three must-have features: an eye-catching landing page, list of services and a gallery to showcase previous work. He allowed me free-range creativity with the rest. The content from his previous marketing page was used to populate the website I built for him.",
			"processSub": "Once I implemented features he requested, I started getting creative with the layout and user experience. Some features I added include a testimonial section showcasing positive reviews and an inquiry email server to allow clients the ability to reach out directly from within the site. I continue to honor any requests for alterations and additions to the website. His appreciation and excitement about the finished product motivated my drive to continue doing freelance work.",
			"conclusion": [
				"Improved UI/UX design skills",
				"Learned about and implemented a reusable email server with express",
				"Progressed customer service skills and ability to meet cuctomer expectations",
				"Acquired more possibility for referrals for new clients"
			]
		},
		"stack": [
			"React",
			"SASS",
			"Express.js",
			"NodeMailer"
		],
		"tags": [
			"JavaScript",
			"React",
			"SASS",
			"2020"
		],
		"source": "https://github.com/capriok/KPCon-Client",
		"demo": "https://www.keithphillingane.com",
		"thumb": "./images/KPCON-INTRO.jpg",
		"images": [
			"./images/KPCON-SHOWCASE.jpg",
			"./images/KPCON-INTRO.jpg",
			"./images/KPCON-DETAIL.jpg",
			"./images/KPCON-GALLERY.jpg",
			"./images/KPCON-EMAIL.jpg"
		],
		"resources": [
			"https://nodemailer.com/about"
		]
	},
	{
		"title": "SQLifting",
		"slug": "sqlifting",
		"description": "Exercise smarter with a personalized exercise and workout plan building application, packed with analytic and social features",
		"writing": {
			"process": "When starting this project I had one goal in mind, to expand my abilities working with structured databases. I chose MySQL because of the tried and true user experience. Additionally, this project allowed me to explore more services in the AWS cloud ecosystem. For this project, I utilized the Relational Database Service (RDS) service.",
			"processSub": "To start, I designed a simple front-end interface to display the data I would be rendering. Next, I spun up my express server, connected the database and started writing my first queries. Hitting the server routes and seeing my queries run for the first time was empowering. I developed much more appreciation for backend development. Throughout my work, I realized how to optimize my queries and improve how I architect the database, which is the most important aspect to me. This app, originally meant to practice querying with SQL, became one I use daily.",
			"conclusion": [
				"Developed skills working with a structured database",
				"Learned more about the AWS cloud ecosystem and services it offers",
				"Improved skills writing dynamic functions that do more with less code",
				"Became more fluent with data manipulation and working with complex objects"
			]
		},
		"stack": [
			"React",
			"SASS",
			"Express.js",
			"AWS RDS",
			"MySQL"
		],
		"tags": [
			"JavaScript",
			"React",
			"SQL",
			"2021"
		],
		"source": "https://github.com/capriok/SQLifting",
		"demo": "https://sqlifting.kylecaprio.dev",
		"thumb": "./images/SQLIFTING-MANAGE.jpg",
		"images": [
			"./images/SQLIFTING-SHOWCASE.jpg",
			"./images/SQLIFTING-GREETING.jpg",
			"./images/SQLIFTING-PROFILE.jpg",
			"./images/SQLIFTING-MANAGE.jpg",
			"./images/SQLIFTING-ASSEMBLE.jpg",
			"./images/SQLIFTING-WORKOUT.jpg",
			"./images/SQLIFTING-INPROGRESS.jpg"
		],
		"resources": [
			"https://www.postgresql.org",
			"https://aws.amazon.com/rds"
		]
	},
	{
		"title": "Snekkel",
		"slug": "snekkel",
		"description": "Grid based snake game featuring dynamic directional sprites and difficulty settings",
		"writing": {
			"process": "After making Disarray, my first JavaScript puzzle game, I was excited to make more nostalgia-inspired games. I instantly thought of the classic game I grew up playing, Snake. I first thought of building this using only vanilla JavaScript, which I knew would not be a problem for me, but I couldn't bring myself away from the React ecosystem. It added such an elegant and modern factor to the game. So, I decided to use both while emphasizing vanilla JavaScript for-loops and array manipulation methods rather than React hook state setters.",
			"processSub": "I began by forming the logic to create a game tick and draw the grid. Next, I randomly assigned the “food” and rendered the snake to the grid. This was fairly straight forward due to the amount of brainstorming and planning I did before writing any code. At first, the snake was merely a color-filled grid tile followed by other color-filled grid tiles acting as its tail. I knew this was not the end result, so I started planning how to implement sprites into my game. This was the most difficult code I've had to write while working with game-style code. But man, it was so fun and rewarding. It involved writing a function to check the snake’s head position and which direction it was facing on the grid. Another function checked the tail pieces’ previous and subsequent position and direction in order to render the correct sprite for a specific piece. The complexity of rendering corner pieces revealed to be pretty difficult. While I spend time finishing this feature, the game may look unfinished but continues to serve as a reminder of how far my skills have come.",
			"conclusion": [
				"Improved skills in writing iterative functions with vanilla JavaScript",
				"Learned a lot about game loops and what goes on behind the scenes",
				"Realization of my adept abilities writing complex JavaScript without using references"
			]
		},
		"stack": [
			"React",
			"JavaScript",
			"SASS"
		],
		"tags": [
			"JavaScript",
			"React",
			"SASS",
			"2020"
		],
		"source": "https://github.com/capriok/Snekkel",
		"demo": "https://snekkel.kylecaprio.dev",
		"thumb": "./images/SNEKKEL-SPRITE.jpg",
		"images": [
			"./images/SNEKKEL-SHOWCASE.jpg",
			"./images/SNEKKEL-GREETING.jpg",
			"./images/SNEKKEL-SPRITE.jpg",
			"./images/SNEKKEL-DIFFICULTY.jpg"
		],
		"resources": []
	},
	{
		"title": "Godspeed",
		"slug": "godspeed",
		"description": "NPM Package - React component and toolkit library simply built for quick use and extensive customizability",
		"writing": {
			"process": "With my earliest experiences working in React, I found component design to be the most intersting. This led me to the utilization of Material-UI, which I love. Using the library accelerated the process of building great looking components. However, when it came simple customization, which is important to me, the complexity and amount of code needed was detrimental to the process.",
			"processSub": "Every developer knows styling components can be very tedious, so I set out to make my own styled component library. I used Styled-Components as the foundation because of how lightweight and functional the library is. After making my first buttons and inputs, I felt a very high level of satisfaction. Next, I started the process of cleaning up code and creating a more professional base for my soon to be NPM package. This quickly became, and remains to be, one of my favorite and most prized endeavors to work on.",
			"conclusion": [
				"Expanded my knowledge about the inner workings of which NPM packages are made",
				"Developed a comfort with working inside complex enterprise tailored code bases",
				"Learned a lot about prop-types and error handling to esure correct use opf the package",
				"Learned Gatsby.js to make the documention website"
			]
		},
		"stack": [
			"Styled-Components",
			"React",
			"JavaScript",
			"NPM",
			"Gatsby",
			"SASS"
		],
		"tags": [
			"Gatsby",
			"React",
			"JavaScript",
			"NPM",
			"2020",
			""
		],
		"source": "https://github.com/capriok/Godspeed",
		"demo": "https://godspeed.kylecaprio.dev",
		"thumb": "./images/GODSPEED-HOME.jpg",
		"images": [
			"./images/GODSPEED-SHOWCASE.jpg",
			"./images/GODSPEED-HOME.jpg",
			"./images/GODSPEED-BUTTON.jpg",
			"./images/GODSPEED-INPUT.jpg",
			"./images/GODSPEED-MODAL.jpg"
		],
		"resources": [
			"https://www.styled-components.com",
			"https://www.npmjs.com"
		]
	},
	{
		"title": "DisArray",
		"slug": "disarray",
		"description": "Tile puzzle game challenging your strategic and critical thinking skills with an engouraged competitive aspect",
		"writing": {
			"process": "The #100DaysOfCode challenge all across social media inspired me to build a JavaScript game. I Immediately had the perfect game in mind, a 16-tile sorting puzzle I had in my youth but could never truely solve. Planning the code structure came to me rather quickly, which made me more excited to build this game. The main challenge hit when it was time to write the tile movement and checking for wins. Once that was all sorted out it was time to introduce the competitive aspect. This entailed writing a timer to track the current game length, as well as writing the leaderboards server code to keep track of user wins and times.",
			"processSub": "",
			"conclusion": [
				"Extensively improved my array and object manipulation skills",
				"Enhanced my fluency with iterative and recursive techniques",
				"Learned more about lambda functions for deployment for server",
				"Familiarized myself with serverless HTTP API use"
			]
		},
		"stack": [
			"React",
			"SASS",
			"Express.js",
			"MongoDB"
		],
		"tags": [
			"JavaScript",
			"React",
			"SASS",
			"MongoDB",
			"2020"
		],
		"source": "https://github.com/capriok/DisArray",
		"demo": "https://disarray.kylecaprio.dev",
		"thumb": "./images/DISARRAY-START.jpg",
		"images": [
			"./images/DISARRAY-SHOWCASE.jpg",
			"./images/DISARRAY-GREETING.jpg",
			"./images/DISARRAY-START.jpg",
			"./images/DISARRAY-SOLVED.jpg",
			"./images/DISARRAY-LEADERBOARD.jpg"
		],
		"resources": []
	},
	{
		"title": "Portfolio v1",
		"slug": "portfolio-v1",
		"description": "Version One of my sofware developer portfolio, built with React.js alone",
		"writing": {
			"process": "The main goal was to create a space for people to visually see my skills and experience clearly. I strongly believe showcasing personal projects and professional endeavors is key for any software developer. After building the website structure, it came time to reflect on myself and what I've learned and accomplished over the years. This portfolio is something I hold dear to my heart as it is the forefront of what will land me my first job as a developer and change my life forever. This is who I am and what I love doing, take a look.",
			"processSub": "",
			"conclusion": []
		},
		"stack": [
			"React",
			"JavaScript",
			"SASS",
			"Express.js",
			"NodeMailer"
		],
		"tags": [
			"JavaScript",
			"React",
			"SASS",
			"2020"
		],
		"source": "https://github.com/capriok/Portfolio-v1",
		"demo": "https://portfolio-v1.kylecaprio.dev",
		"thumb": "./images/PORTFOLIO-HOME.jpg",
		"images": [
			"./images/PORTFOLIO-SHOWCASE.jpg",
			"./images/PORTFOLIO-HOME.jpg",
			"./images/PORTFOLIO-ABOUT.jpg",
			"./images/PORTFOLIO-PROJECTS.jpg",
			"./images/PORTFOLIO-PROJECT.jpg",
			"./images/PORTFOLIO-RESUME.jpg"
		],
		"resources": [
			"https://nodemailer.com/about"
		]
	},
	{
		"title": "NeetChat",
		"slug": "neetchat",
		"description": "Harnessing the power of socket.io to create a chatroom application. Fully functional with individual rooms, typing alerts and private messages.",
		"writing": {
			"process": "This was one of the first complex collaborative projects I have done, two main contributors being Jordan Riley and Hunter Foulk. We had a vision in mind to make a modern remake of an old school styled chat room application. Socket.io and Express in Node were the foundation of this application. Learning about web sockets was extremely intriguing to me and taught me a lot about how countless other web applications work.",
			"processSub": "The most difficult feature was the implementation of private messaging. After long sessions of brainstorming, discussing and planning we realized quite a few key foundations of code needed to be rewritten. We pushed through, and were very thankful we did, because the end result of this project and the chemistry built with eachother was something to be very proud of.",
			"conclusion": [
				"Developed a proficient understanding of web sockets and server based applications",
				"Progressed my teamwork skills working in professional-style environments",
				"Stronger comprehension of server code and advanced web applications"
			]
		},
		"stack": [
			"React",
			"JavaScript",
			"SASS",
			"Express.js",
			"Socket.io"
		],
		"tags": [
			"JavaScript",
			"Socket.io",
			"React",
			"SASS",
			"2019"
		],
		"source": "https://github.com/hunterfoulk/Neet-Chat",
		"demo": "https://github.com/hunterfoulk/Neet-Chat",
		"thumb": "./images/NEETCHAT-HOME.jpg",
		"images": [
			"./images/NEETCHAT-HOME.jpg",
			"./images/NEETCHAT-CHAT.jpg"
		],
		"resources": [
			"https://socket.io"
		]
	},
	{
		"title": "MyTube Music",
		"slug": "mytube-music",
		"description": "Youtube Data API consumed to create a client-sided music streaming application wrapped in Electron",
		"writing": {
			"process": "I had a vision to develop a music streaming application inspired by YouTube Music. This being the most complex endeavor of mine I knew the importance of keeping a clean code base. The Youtube Data API is the foundation of the application. Core functionality consisted of user authentication, which led to managing complex user objects. The amount of user data started becoming difficult to keep track of so I implemented global state management with the help of React hooks. Once established this opened my eyes to how powerful React actually is. My love for this framework skyrocketed during the development process of this app.",
			"processSub": "",
			"conclusion": [
				"Became confident working with an API ( GET, POST, UPDATE, DELETE )",
				"Learned about user authentication and how to effectively use the state of authentication in my application",
				"Familiarized myself with complex state management via React hooks ( useContext, useReducer )",
				"Management of complex core application and component structure"
			]
		},
		"stack": [
			"React",
			"JavaScript",
			"CSS",
			"Electron",
			"Express.js",
			"Youtube Data API v3"
		],
		"tags": [
			"JavaScript",
			"React",
			"Electron",
			"CSS",
			"2019"
		],
		"source": "https://github.com/capriok/MyTube",
		"demo": "https://mytube-music.kylecaprio.dev",
		"thumb": "./images/MTM-PLAYER.jpg",
		"images": [
			"./images/MTM-SHOWCASE.jpg",
			"./images/MTM-GOOGLE.jpg",
			"./images/MTM-PLAYER.jpg",
			"./images/MTM-PLAYLISTS.jpg"
		],
		"resources": [
			"https://developers.google.com/youtube/v3"
		]
	},
	{
		"title": "AB Engraving",
		"slug": "arte-bella-engraving",
		"description": "Small business client’s single page website to showcase the company mission statement, services offered and previous work.",
		"writing": {
			"process": "The client's desires consisted of two main objectives: simplicity and accessibility. First, I created the foundation, a simple single page website that is easily navigable. The next process was to optimize the website to be fully responsive for any device and or screen size. I found that using React was perfect for this application. Designing the skeleton with only filler content to work with, until the client provided their own, allowed me to create a structure that was extremely dynamic and versatile. When the content was supplied, I thanked myself for creating such an adaptable architecture.",
			"processSub": "",
			"conclusion": [
				"Built time management, self-assurance and negotiation skills",
				"Learned about domain management, web hosting and application deployment",
				"Crafted fully responsive web design ( markup, styling, querying )",
				"Improved React conditional component rendering"
			]
		},
		"stack": [
			"React",
			"JavaScript",
			"SASS",
			"Express.js",
			"NodeMailer"
		],
		"tags": [
			"JavaScript",
			"React",
			"SASS",
			"2019"
		],
		"source": "https://github.com/capriok/Arte-Bella",
		"demo": "https://github.com/capriok/Arte-Bella",
		"thumb": "./images/ARTE-BELLA-HOME.jpg",
		"images": [
			"./images/ARTE-BELLA-SHOWCASE.jpg",
			"./images/ARTE-BELLA-HOME.jpg",
			"./images/ARTE-BELLA-HOME.jpg",
			"./images/ARTE-BELLA-HOME.jpg"
		],
		"resources": []
	},
	{
		"title": "TookFeed",
		"slug": "tookfeed",
		"description": "Harnessing the power of News API to stay up to date on global or local news",
		"writing": {
			"process": "My goal of this project was to create a newsfeed application I could tailor to my own interests. During the development process, I greatly improved my JavaScript and Web Development skills. Teaching myself React was the big challenge of this project. My lack of knowledge about state management and lifecycles quickly changed as I devoted myself to this learning framework. I fell in love with React and have been using it exclusively ever since.",
			"processSub": "",
			"conclusion": [
				"Learned React from the ground up",
				"Developed knowledge about state management, lifecycles, and the virtual DOM",
				"Improved my skills in dealing with HTTP request methods"
			]
		},
		"stack": [
			"React",
			"JavaScript",
			"Electron",
			"CSS",
			"NewsAPI"
		],
		"tags": [
			"JavaScript",
			"React",
			"Electron",
			"CSS",
			"2018"
		],
		"source": "https://github.com/capriok/TookFeed",
		"demo": "https://tookfeed.kylecaprio.dev",
		"thumb": "./images/TOOKFEED-HOME.jpg",
		"images": [
			"./images/TOOKFEED-SHOWCASE.jpg",
			"./images/TOOKFEED-HOME.jpg",
			"./images/TOOKFEED-REGISTER.jpg",
			"./images/TOOKFEED-OPTIONS.jpg",
			"./images/TOOKFEED-PROFILE.jpg"
		],
		"resources": [
			"https://newsapi.org",
			"https://www.electronjs.org"
		]
	},
	{
		"title": "Theme  Distribution",
		"slug": "theme-distribution",
		"description": "Combining aesthetics with user customizability to provide easy to use but unique themes for any interested user",
		"writing": {
			"process": "My aspiration for this endeavor was to provide quality Tumblr themes to people who enjoy customization of their blog without paying top dollar for a template. Combining aesthetics, simplicity, and customizability, I became the go-to guy for themes among my peers. This is when I initially found my passion for web development. Tinkering with code and teaching myself new techniques became the part of my day I looked forward to the most.",
			"processSub": "",
			"conclusion": [
				"Better understanding of how the web is structured and manipulated by the browser",
				"Acquisition of web development skills ( HTML, CSS, JQuery )",
				"Formed simple business and production style thinking habits",
				"Developed a brand for myself"
			]
		},
		"stack": [
			"HTML",
			"CSS",
			"Jquery",
			"Tumblr Theme Editor"
		],
		"tags": [
			"HTML",
			"CSS",
			"Jquery",
			"2014"
		],
		"source": "https://themesfromkyle.tumblr.com",
		"demo": "https://themesfromkyle.tumblr.com",
		"thumb": "./images/TFK-HOME.jpg",
		"images": [
			"./images/TFK-HOME.jpg",
			"./images/TFK-PREV1.jpg",
			"./images/TFK-PREV2.jpg",
			"./images/TFK-PREV3.jpg"
		],
		"resources": [
			"https://www.jquery.com"
		]
	}
]